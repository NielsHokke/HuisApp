package nl.nielshokke.huisapp.Notification;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.Context;
import android.os.Build;
import android.support.v4.app.NotificationCompat;

import nl.nielshokke.huisapp.R;

import static android.content.Context.NOTIFICATION_SERVICE;

/**
 * Created by Nelis on 21-5-2018.
 */

public class QRcodeNotification {

    private Context mContext;
    private static final String NOTIFICATION_CHANNEL_ID = "QRcode_notification_channel";
    private static final int NOTIFICATION_ID = 2;

    public QRcodeNotification(Context context){
        mContext = context;
    }

    public void show(String recipient, String made_by, String comment, Boolean istest){

        String Message = recipient + " used a QRcode generated by " + made_by + ".\nComment: " + comment;

        NotificationManager notificationManager = (NotificationManager) mContext.getSystemService(NOTIFICATION_SERVICE);

        //TODO sound/vibarion? settings for both

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {

            NotificationChannel notificationChannel = new NotificationChannel(NOTIFICATION_CHANNEL_ID, "QRcode frontdoor", NotificationManager.IMPORTANCE_DEFAULT);


            // Configure the notification channel.
            notificationChannel.setDescription("QRcode notifications");
            notificationChannel.enableLights(true);
            notificationChannel.setLightColor(R.color.purple);
            notificationChannel.enableVibration(false);

            notificationManager.createNotificationChannel(notificationChannel);

            NotificationCompat.Builder builder = new NotificationCompat.Builder(mContext, NOTIFICATION_CHANNEL_ID)
                    .setSmallIcon(R.drawable.ic_door_icon)
                    .setColor(mContext.getResources().getColor(R.color.colorPrimary))
                    .setContentText(Message)
                    .setUsesChronometer(true)
                    .setStyle(new NotificationCompat.BigTextStyle()
                            .bigText(Message))
                    .setPriority(NotificationCompat.PRIORITY_DEFAULT);

            if (istest) {
                builder.setContentTitle("QRcode used. This is a Test");
            } else {
                builder.setContentTitle("QRcode used");
            }

            notificationManager.notify(NOTIFICATION_ID, builder.build());

        }else{

            NotificationCompat.Builder builder = new NotificationCompat.Builder(mContext, NOTIFICATION_CHANNEL_ID)
                    .setSmallIcon(R.drawable.ic_door_icon)
                    .setColor(mContext.getResources().getColor(R.color.colorPrimary))
                    .setContentText(Message)
                    .setUsesChronometer(true)
                    .setStyle(new NotificationCompat.BigTextStyle()
                            .bigText(Message))
                    .setPriority(NotificationCompat.PRIORITY_DEFAULT);

            if (istest) {
                builder.setContentTitle("QRcode used. This is a Test");
            } else {
                builder.setContentTitle("QRcode used");
            }

            notificationManager.notify(NOTIFICATION_ID, builder.build());
        }
    }
}
